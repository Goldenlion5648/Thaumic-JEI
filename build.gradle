plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '6.0.+'
}

repositories {
    maven {
        name "Su5ed LegacyDev Fork"
        url "https://maven.su5ed.dev/releases"
    }
}

// eclipse thinks test needs resources if this is not here
sourceSets {
    test {
        resources.setSrcDirs([])
    }
}

import net.minecraftforge.gradle.mcp.MCPRepo
import net.minecraftforge.gradle.common.tasks.SignJar
import net.minecraftforge.gradle.common.util.MavenArtifactDownloader

repositories {
    maven {
        url = 'https://www.cursemaven.com/'
        content {
            includeGroup "curse.maven"
        }
    }
}

version = "${mcversion}-${version}"
group = 'com.buuz135.thaumicjei'
archivesBaseName = 'ThaumicJEI'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)


legacy {
    fixClasspath = true
    extractMappings = true
    attachMappings = true
}

final arch = System.getProperty("os.arch")
final needCustomNatives = arch != "x86" && arch != "i386" && arch != "x86_64" && arch != "amd64"

minecraft {
    mappings channel: 'stable', version: '39-1.12'

    runs {
        client {
            workingDirectory file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'


            if (needCustomNatives) {
                property 'java.library.path', ''
                environment 'nativesDirectory', "${project.getProjectDir()}/natives"
            }

            environment 'MC_VERSION', '1.12.2'

            mods {
                thaumicaugmentation {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'


            if (needCustomNatives) {
                property 'java.library.path', ''
                environment 'nativesDirectory', "${project.getProjectDir()}/natives"
            }

            environment 'MC_VERSION', '1.12.2'

            mods {
                thaumicaugmentation {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mcversion}-${forgeversion}"

    implementation fg.deobf("curse.maven:jei-238222:5101347")
    implementation fg.deobf('curse.maven:thaumcraft-223628:2629023')
    implementation fg.deobf('curse.maven:baubles-227083:2518667')

    constraints {
        implementation('net.minecraftforge:legacydev:0.3.0.0-legacyExt') {
            because 'needed to have all ATs work properly'
        }

        implementation('org.ow2.asm:asm-debug-all:5.2') {
            because 'newer ASM versions include module info that causes errors in Java 8'
        }
    }

    configurations.forEach {
        // mergetool pollutes the classpath with conflicting classes
        it.exclude(group: 'net.minecraftforge', module: 'mergetool')

        // legacydev forge dep wants fatjar as the classifier, but 3.0 lacks it
        it.resolutionStrategy.eachDependency {
            if (it.requested.module.toString() == "net.minecraftforge:legacydev") {
                it.artifactSelection {
                    it.selectArtifact(DependencyArtifact.DEFAULT_TYPE, null, null)
                }
            }
        }
    }

    if (needCustomNatives) {
        implementation fileTree(dir: 'natives', include: '*.jar')
    }
}

idea {
    module {
        inheritOutputDirs = true
        downloadJavadoc = true
        downloadSources = true
    }
}


processResources {
    // required to allow file expansion later
    duplicatesStrategy = 'include'

    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', version
    inputs.property 'apiversion', apiversion
    inputs.property 'mcversion', mcversion

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': version, 'mcversion': mcversion, 'forgeversion': forgeversion, 'forgeminversion': forgeminversion
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}



jar {
    manifest {
        attributes([
            "Specification-Title": "Thaumic JEI",
            "Specification-Vendor": "thaumicjei",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"thaumicjei",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
